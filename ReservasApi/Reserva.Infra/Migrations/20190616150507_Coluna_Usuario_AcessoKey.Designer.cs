// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reserva.Infra.Context;

namespace Reserva.Infra.Migrations
{
    [DbContext(typeof(ReservaContext))]
    [Migration("20190616150507_Coluna_Usuario_AcessoKey")]
    partial class Coluna_Usuario_AcessoKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reserva.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("FilialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("QuantidadeSala");

                    b.Property<int>("SalaId");

                    b.HasKey("FilialId");

                    b.ToTable("Filia");
                });

            modelBuilder.Entity("Reserva.Domain.Entities.Reservas", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Café");

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<DateTime>("HoraFim");

                    b.Property<DateTime>("HoraInicio");

                    b.Property<int>("QuantidadePessoa");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ReservaId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Reserva.Domain.Entities.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilialId");

                    b.Property<string>("NomeSala")
                        .IsRequired();

                    b.Property<int?>("ReservasReservaId");

                    b.Property<int>("TipoSala");

                    b.HasKey("SalaId");

                    b.HasIndex("FilialId");

                    b.HasIndex("ReservasReservaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Reserva.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Reserva.Domain.Entities.Sala", b =>
                {
                    b.HasOne("Reserva.Domain.Entities.Filial", "Filial")
                        .WithMany("Salas")
                        .HasForeignKey("FilialId")
                        .HasPrincipalKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Reserva.Domain.Entities.Reservas")
                        .WithMany("Salas")
                        .HasForeignKey("ReservasReservaId");
                });
#pragma warning restore 612, 618
        }
    }
}
